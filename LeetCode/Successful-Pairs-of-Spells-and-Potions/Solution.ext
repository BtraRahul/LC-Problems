class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions,
                                long long success) {
        // sort(spells.begin(), spells.end());
        sort(potions.begin(), potions.end());

        vector<int> ans;

        for (int i = 0; i < spells.size(); i++) {
            int sp = spells[i];
            long long num = ceil(success / (1.0 * sp));
            int idx = lower_bound(potions.begin(), potions.end(), num) -
                      potions.begin();
            if (idx >= 0 && idx < potions.size()) {
                // cout << spells[i] << " " << num << " " << idx << " "
                //      << potions[idx] << endl;

                ans.push_back(potions.size() - idx);
                // if (potions[idx] == num)
                // else?
                //     ans.push_back(potions.size() - idx + 1);
            } else
                ans.push_back(0);
        }

        return ans;
    }
};