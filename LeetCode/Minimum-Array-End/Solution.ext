class Solution {
    vector<int> bits;

public:
    long long minEnd(int n, int x) {
        bits.resize(64);
        int a = n - 1;
        for (int i = 63; i >= 0 && n > 0; i--) {
            if (x & 1)
                bits[i] = 1;
            x = x >> 1;
        }

        // for (int e : bits)
        //     cout << e;
        // cout << endl;

        int size = 0;
        // merge x and n-1;
        for (int i = 63; i >= 0 && a > 0; i--) {
            if (bits[i])
                continue;
            bits[i] = a & 1;
            a = a >> 1;
        }

        for (int i = 0; i < 64; i++) {
            if (bits[i]) {
                size = 64 - (i);
                break;
            }
        }
        // cout << size;
        long long ans = 0;
        long long val = 1;
        for (int i = 63; i >= 0 && size > 0; i--) {
            ans += val * bits[i];
            val *= 2;
            size--;
        }

        return ans;
    }
};